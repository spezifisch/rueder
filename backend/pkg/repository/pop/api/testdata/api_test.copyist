1=DriverOpen	1:nil
2=ConnExec	2:"DO\n$func$\nDECLARE\n   _tbl text;\n   _sch text;\nBEGIN\n   FOR _sch, _tbl IN\n      SELECT schemaname, tablename\n      FROM   pg_tables\n      WHERE  tablename <> 'schema_migration' AND schemaname NOT IN ('pg_catalog', 'information_schema') AND tableowner = current_user\n   LOOP\n      --RAISE ERROR '%',\n      EXECUTE  -- dangerous, test before you execute!\n         format('TRUNCATE TABLE %I.%I CASCADE', _sch, _tbl);\n   END LOOP;\nEND\n$func$;"	1:nil
3=ConnPrepare	2:"INSERT INTO \"users\" (\"auth_origin\", \"auth_subject\", \"created_at\", \"folders\", \"id\", \"updated_at\") VALUES ($1, $2, $3, $4, $5, $6)"	1:nil
4=StmtNumInput	3:6
5=StmtExec	1:nil
6=ConnQuery	2:"SELECT feeds.created_at, feeds.feed_url, feeds.fetch_delay_s, feeds.fetched_at, feeds.fetcher_state, feeds.icon, feeds.id, feeds.site_url, feeds.title, feeds.updated_at FROM feeds AS feeds"	1:nil
7=RowsColumns	9:["created_at","feed_url","fetch_delay_s","fetched_at","fetcher_state","icon","id","site_url","title","updated_at"]
8=RowsNext	11:[]	7:"EOF"
9=ConnQuery	2:"SELECT *, row_number() over (partition by feed_id order by seq) as feed_seq FROM articles AS articles WHERE articles.id = $1 LIMIT 1"	1:nil
10=RowsColumns	9:["id","created_at","updated_at","seq","feed_id","site_guid","posted_at","link","thumbnail","image","image_title","title","teaser","content","feed_seq"]

"TestAPI_Feeds"=1,2,3,3,4,5,6,7,7,8
"TestAPI_GetArticle"=1,2,3,3,4,5,9,10,10,8
